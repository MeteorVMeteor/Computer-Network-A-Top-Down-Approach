1.What is the IP address and TCP port number used by the client computer (source) that is transferring the file to gaia.cs.umass.edu? To answer this question, it’s probably easiest to select an HTTP message and explore the details of the TCP packet used to carry this HTTP message, using the “details of the selected packet header window” (refer to Figure 2 in the “Getting Started with Wireshark” Lab if you’re uncertain about the Wireshark windows.
10.58.97.5	128.119.245.12	TCP	66	59092 → 80 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM=1
10.58.97.5 58982

2. What is the IP address of gaia.cs.umass.edu? On what port number is it sending and receiving TCP segments for this connection? 
128.119.245.12  80

3. What is the IP address and TCP port number used by your client computer (source) to transfer the file to gaia.cs.umass.edu? 
10.58.97.5 58982

4. What is the sequence number of the TCP SYN segment that is used to initiate the TCP connection between the client computer and gaia.cs.umass.edu? What is it in the segment that identifies the segment as a SYN segment? 
Sequence Number (raw): 35123972
Flags: 0x002 (SYN)

5. What is the sequence number of the SYNACK segment sent by gaia.cs.umass.edu to the client computer in reply to the SYN? What is the value of the Acknowledgement field in the SYNACK segment? How did gaia.cs.umass.edu determine that value? What is it in the segment that identifies the segment as a SYNACK segment? 
Sequence Number (raw): 2925487862
Acknowledgment number (raw): 35123973
SYN : [Next Sequence Number: 1    (relative sequence number)]
Flags: 0x012 (SYN, ACK)

6. What is the sequence number of the TCP segment containing the HTTP POST command? Note that in order to find the POST command, you’ll need to dig into the packet content field at the bottom of the Wireshark window, looking for a segment with a “POST” within its DATA field. 
Sequence Number (raw): 35123973
50 4f 53 54 20 2f 77 69 ……
POST /wireshark-labs/lab3-1-reply.htm HTTP/1.1

7. Consider the TCP segment containing the HTTP POST as the first segment in the TCP connection. What are the sequence numbers of the first six segments in the TCP connection (including the segment containing the HTTP POST)? At what time was each segment sent? When was the ACK for each segment received? Given the difference between when each TCP segment was sent, and when its acknowledgement was received, what is the RTT value for each of the six segments? What is the EstimatedRTT value (see Section 3.5.3, page 242 in text) after the receipt of each ACK? Assume that the value of the EstimatedRTT is equal to the measured RTT for the first segment, and then is computed using the EstimatedRTT equation on page 242 for all subsequent segments. 
Sequence Number (raw): 35123973  96	13.418992	10.58.97.5	128.119.245.12	TCP	779	59092 → 80 [PSH, ACK] Seq=1 Ack=1 Win=131328 Len=725
Sequence Number (raw): 35124698  97	13.419240	10.58.97.5	128.119.245.12	TCP	1140	59092 → 80 [ACK] Seq=726 Ack=1 Win=131328 Len=1086
Sequence Number (raw): 35125784  98	13.419240	10.58.97.5	128.119.245.12	TCP	1140	59092 → 80 [ACK] Seq=1812 Ack=1 Win=131328 Len=1086
Sequence Number (raw): 35126870  99	13.419240	10.58.97.5	128.119.245.12	TCP	1140	59092 → 80 [ACK] Seq=2898 Ack=1 Win=131328 Len=1086
Sequence Number (raw): 35127956  100	13.419240	10.58.97.5	128.119.245.12	TCP	1140	59092 → 80 [ACK] Seq=3984 Ack=1 Win=131328 Len=1086
Sequence Number (raw): 35129042  101	13.419240	10.58.97.5	128.119.245.12	TCP	1140	59092 → 80 [ACK] Seq=5070 Ack=1 Win=131328 Len=1086
106	13.607701	128.119.245.12	10.58.97.5	TCP	60	80 → 59092 [ACK] Seq=1 Ack=726 Win=30720 Len=0
108	13.607809	128.119.245.12	10.58.97.5	TCP	60	80 → 59092 [ACK] Seq=1 Ack=5070 Win=39424 Len=0
RTT0 : 13.607701 - 13.418992 = 0.188709  RTT1 : 13.607809 - 13.419240 = 0.188569
EstimatedRTT: 0.1886915

8. What is the length of each of the first six TCP segments?
725 * 1
1086 * 5

9. What is the minimum amount of available buffer space advertised at the received for the entire trace? Does the lack of receiver buffer space ever throttle the sender? 
2	0.023172	128.119.245.12	192.168.1.102	TCP	62	80 → 1161 [SYN, ACK] Seq=0 Ack=1 Win=5840 Len=0 MSS=1460 SACK_PERM=1

9	0.077294	128.119.245.12	192.168.1.102	TCP	60	80 → 1161 [ACK] Seq=1 Ack=2026 Win=8760 Len=0
Beacause 8760-7865(1460*5+565) < MSS(1460)
11	0.078157	192.168.1.102	128.119.245.12	TCP	1514	1161 → 80 [ACK] Seq=6406 Ack=1 Win=17520 Len=1460 [TCP segment of a reassembled PDU]
13	0.124185	192.168.1.102	128.119.245.12	TCP	1201	1161 → 80 [PSH, ACK] Seq=7866 Ack=1 Win=17520 Len=1147 [TCP segment of a reassembled PDU]
so wait 0.078157 -> 0.124185

10. Are there any retransmitted segments in the trace file? What did you check for (in the trace) in order to answer this question? 
no
no same seq

11. How much data does the receiver typically acknowledge in an ACK? Can you identify cases where the receiver is ACKing every other received segment (see Table 3.2 on page 250 in the text). 
typically 1 ack to 1 segment
7	0.054026	192.168.1.102	128.119.245.12	TCP	1514	1161 → 80 [ACK] Seq=2026 Ack=1 Win=17520 Len=1460 [TCP segment of a reassembled PDU]
9	0.077294	128.119.245.12	192.168.1.102	TCP	60	80 → 1161 [ACK] Seq=1 Ack=2026 Win=8760 Len=0
8	0.054690	192.168.1.102	128.119.245.12	TCP	1514	1161 → 80 [ACK] Seq=3486 Ack=1 Win=17520 Len=1460 [TCP segment of a reassembled PDU]
12	0.124085	128.119.245.12	192.168.1.102	TCP	60	80 → 1161 [ACK] Seq=1 Ack=3486 Win=11680 Len=0

12. What is the throughput (bytes transferred per unit time) for the TCP connection? Explain how you calculated this value. 
318	14.187045	128.119.245.12	10.58.97.5	TCP	60	80 → 59092 [ACK] Seq=1 Ack=153045 Win=277888 Len=0
ACK 153045 means sent 153045 bytes
96	13.418992	10.58.97.5	128.119.245.12	TCP	779	59092 → 80 [PSH, ACK] Seq=1 Ack=1 Win=131328 Len=725 [TCP segment of a reassembled PDU]
time 14.187045 - 13.418992 = 0.768053
153045 / 0.768053 = 199263 Bps = 194 KBps = 1.5Mbps
